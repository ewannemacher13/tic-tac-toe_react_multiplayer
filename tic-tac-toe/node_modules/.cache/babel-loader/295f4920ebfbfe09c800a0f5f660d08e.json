{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\progs\\\\nodeProgs\\\\tic-tac-toe_react_multi\\\\tic-tac-toe\\\\src\\\\App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport React from 'react';\nimport openSocket from \"socket.io-client\";\nconst socket = openSocket();\n\nfunction determineWinner(boardState) {\n  // will come in ['X','O',null,null....]\n  // win states: 3 same horizontal, 3 same vertical, 3 same diagonal\n  // 0 1 2\n  // 3 4 5\n  // 6 7 8\n  const winStates = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < winStates.length; i++) {\n    const [a, b, c] = winStates[i];\n\n    if (boardState[a] && boardState[a] === boardState[b] && boardState[a] === boardState[c]) {\n      return boardState[a];\n    }\n  }\n\n  return null;\n}\n\nfunction subToTimer(cb) {\n  socket.on('timer', timestamp => cb(null, timestamp));\n  socket.emit('subscribeToTimer', 1000);\n}\n\nfunction subToToggle(tog, cb) {\n  socket.on('toggleButton', toggle => cb(null, toggle)); // socket.emit('toggle', tog);\n}\n\nfunction Square(props) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    children: props.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 7\n  }, this);\n}\n\n_c = Square;\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: Array(9).fill(null),\n      player: 'X',\n      winner: null\n    };\n  }\n\n  handleClick(i) {\n    const squares = this.state.squares.slice();\n\n    if (determineWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.player;\n    const winner = determineWinner(squares);\n    this.setState({\n      squares: squares,\n      player: this.state.player === 'X' ? 'O' : 'X',\n      winner: winner\n    });\n  }\n\n  renderSquare(i) {\n    return /*#__PURE__*/_jsxDEV(Square, {\n      value: this.state.squares[i],\n      onClick: () => this.handleClick(i, this.props.player)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 12\n    }, this);\n  }\n\n  resetGame() {\n    this.setState({\n      squares: Array(9).fill(null),\n      player: 'X',\n      winner: null\n    });\n  }\n\n  render() {\n    const winner = this.state.winner;\n    let status;\n\n    if (winner) {\n      status = `Player ${winner} wins!`;\n    } else {\n      status = `Player ${this.state.player}'s turn`;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board board-row\",\n        children: [this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board board-row\",\n        children: [this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board board-row\",\n        children: [this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"reset-button\",\n        onClick: () => this.resetGame(),\n        children: \"Reset Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.callAPI = async () => {\n      const response = await fetch('/b');\n      const body = await response.json();\n      if (response.status !== 200) throw Error(body.message);\n      console.log(`api got: ${body.message}`);\n      return body;\n    };\n\n    this.getGameId = async () => {\n      // asks the server to generate a unique game id\n      const postOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          msg: 'h'\n        })\n      };\n      const response = await fetch('/gen', postOptions);\n      const body = await response.json();\n      if (response.status !== 200) throw Error(body.message);\n      return body;\n    };\n\n    this.state = {\n      apiResponse: '',\n      socketResponse: '',\n      gameId: '',\n      timestamp: 'none',\n      toggle: 'False'\n    };\n  }\n\n  toggle() {\n    console.log(`toggle func`); // socket.on('toggleButton', () => {\n    //   this.setState({toggle: (this.state.toggle === 'False') ? 'True' : 'False'});\n    // });\n\n    tog = this.state.toggle;\n    socket.emit('toggle', tog);\n  }\n\n  componentDidMount() {\n    this.callAPI() // .then(res => console.log(res.express))\n    .then(res => this.setState({\n      apiResponse: res.express\n    })).catch(err => console.log(err));\n    this.getGameId().then(res => this.setState({\n      gameId: res.id\n    })).catch(err => console.log(err));\n    subToTimer((err, timestamp) => this.setState({\n      timestamp: timestamp\n    }));\n    subToToggle(this.state.toggle, (err, toggle) => this.setState({\n      toggle: toggle\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Game\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Api Response: \", this.state.apiResponse]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Socket timestamp: \", this.state.timestamp]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.toggle(),\n        children: [\"Toggle state: \", this.state.toggle]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Welcome to Tic-Tac-Toe!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your game id is: \", this.state.gameId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Game; // function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to refresh.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n// export default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"Square\");","map":{"version":3,"sources":["C:/progs/nodeProgs/tic-tac-toe_react_multi/tic-tac-toe/src/App.js"],"names":["React","openSocket","socket","determineWinner","boardState","winStates","i","length","a","b","c","subToTimer","cb","on","timestamp","emit","subToToggle","tog","toggle","Square","props","onClick","value","Board","Component","constructor","state","squares","Array","fill","player","winner","handleClick","slice","setState","renderSquare","resetGame","render","status","Game","callAPI","response","fetch","body","json","Error","message","console","log","getGameId","postOptions","method","headers","JSON","stringify","msg","apiResponse","socketResponse","gameId","componentDidMount","then","res","express","catch","err","id"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport React from 'react'\nimport openSocket from \"socket.io-client\";\nconst socket = openSocket();\n\nfunction determineWinner(boardState) {\n  // will come in ['X','O',null,null....]\n  // win states: 3 same horizontal, 3 same vertical, 3 same diagonal\n  \n  // 0 1 2\n  // 3 4 5\n  // 6 7 8\n\n  const winStates = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n\n  for (let i = 0; i < winStates.length; i++) {\n    const [a,b,c] = winStates[i];\n    if (boardState[a] &&boardState[a] === boardState[b] && boardState[a] === boardState[c]) {\n      return boardState[a];\n    }\n  }\n  return null;\n}\n\nfunction subToTimer(cb) {\n  socket.on('timer', timestamp => cb(null,timestamp));\n  socket.emit('subscribeToTimer',1000);\n}\n\nfunction subToToggle(tog,cb) {\n  socket.on('toggleButton', toggle => cb(null,toggle));\n  // socket.emit('toggle', tog);\n}\n\nfunction Square(props) {\n  return (\n      <button className=\"square\" onClick={props.onClick}>\n        {props.value}\n      </button>\n  );\n}\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: Array(9).fill(null),\n      player:'X',\n      winner:null,\n    };\n  }\n\n  handleClick(i) {\n      const squares = this.state.squares.slice();\n      if (determineWinner(squares) || squares[i]) {\n        return;\n      }\n      squares[i] = this.state.player;\n      const winner = determineWinner(squares);\n      this.setState({\n        squares: squares,\n        player: (this.state.player==='X') ? 'O' : 'X',\n        winner: winner\n      });\n  }\n\n  renderSquare(i) {\n    return <Square \n      value={this.state.squares[i]}\n      onClick={() => this.handleClick(i,this.props.player)}\n      />;\n  }\n\n  resetGame() {\n    this.setState({\n      squares: Array(9).fill(null),\n      player: 'X',\n      winner:null,\n    });\n  }\n\n  render() {\n    const winner = this.state.winner;\n    let status;\n    if (winner) {\n      status = `Player ${winner} wins!`;\n    }\n    else {\n      status = `Player ${this.state.player}'s turn`;\n    }\n    return (\n      <div className=\"board\">\n        <p>{status}</p>\n        <div className=\"board board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n        \n        <button className=\"reset-button\" onClick={() => this.resetGame() }>Reset Game</button>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      apiResponse:'',\n      socketResponse:'',\n      gameId: '',\n      timestamp: 'none',\n      toggle: 'False'\n    };\n\n      }\n\n  toggle() {\n    console.log(`toggle func`);\n    // socket.on('toggleButton', () => {\n    //   this.setState({toggle: (this.state.toggle === 'False') ? 'True' : 'False'});\n    // });\n    tog = this.state.toggle;\n    socket.emit('toggle',tog);\n  }\n\n  callAPI = async () => {\n    const response = await fetch('/b');\n    const body = await response.json();\n\n    if (response.status !== 200) throw Error(body.message);\n    console.log(`api got: ${body.message}`);\n\n    return body;\n  }\n\n  getGameId = async () => {\n    // asks the server to generate a unique game id\n\n    const postOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({msg:'h'})\n    };\n\n    const response = await fetch('/gen',postOptions);\n    const body = await response.json();\n\n    if (response.status !== 200) throw Error(body.message);\n    \n    return body;\n\n  }\n\n  componentDidMount() {\n    this.callAPI()\n      // .then(res => console.log(res.express))\n      .then(res => this.setState({apiResponse: res.express}))\n      .catch(err => console.log(err));\n\n    this.getGameId()\n    .then(res => this.setState({gameId: res.id}))\n    .catch(err => console.log(err));\n\n    subToTimer((err,timestamp) => this.setState({timestamp:timestamp}));\n      subToToggle(this.state.toggle,(err,toggle) => this.setState({toggle: toggle}));\n  \n  }\n\n  \n\n  render() {\n    return (\n        <div className=\"Game\">\n          <p>Api Response: {this.state.apiResponse}</p>\n          <p>Socket timestamp: {this.state.timestamp}</p>\n          <button onClick={() => this.toggle()}>Toggle state: {this.state.toggle}</button>\n          \n          <p>Welcome to Tic-Tac-Toe!</p>\n          <div >\n            <Board />\n          </div>\n          <p>Your game id is: {this.state.gameId}</p>\n        </div>\n      \n    );\n  }\n}\n\nexport default Game;\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to refresh.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\n// export default App;\n"]},"metadata":{},"sourceType":"module"}